name: CI/CD Pipeline
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: pass
          MYSQL_DATABASE: ticketing
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - run: npm ci
      - run: npm run lint
      - name: Wait for MariaDB
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"3306" --silent; do
            sleep 1
          done
      - name: Setup database
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root -ppass ticketing < fixtures/schema.sql
          npm run seed
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: pass
          DB_NAME: ticketing
          ADMIN_USER: admin
          ADMIN_PASSWORD: pass
      - name: Run unit tests
        run: npm test
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: pass
          DB_NAME: ticketing
          ADMIN_USER: admin
          ADMIN_PASSWORD: pass

      - name: Start application for Cypress tests
        run: |
          npm start &
          sleep 10
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: pass
          DB_NAME: ticketing
          ADMIN_USER: admin
          ADMIN_PASSWORD: pass
      - name: Run Cypress E2E tests
        run: npm run cypress:run
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: pass
          DB_NAME: ticketing
          ADMIN_USER: admin
          ADMIN_PASSWORD: pass
          CYPRESS_AUTH_USERNAME: admin
          CYPRESS_AUTH_PASSWORD: pass

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/ticketing:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
      
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Pull latest image
            docker pull ${{ secrets.DOCKER_USERNAME }}/ticketing:latest
            
            # Stop existing container
            docker stop ticketing-app || true
            docker rm ticketing-app || true
            
            # Start new container
            docker run -d \
              --name ticketing-app \
              --restart unless-stopped \
              -p 3000:3000 \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_USER=${{ secrets.DB_USER }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e ADMIN_USER=${{ secrets.ADMIN_USER }} \
              -e ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }} \
              ${{ secrets.DOCKER_USERNAME }}/ticketing:latest 